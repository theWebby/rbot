// A routine under windows that asks for administration priviledges to write the licensing info to the registry

var struct = require('ref-struct'),
    ref = require('ref'),
    uniontype = require('ref-union'),
    ffi = require('ffi');

var wtypes = {
  DWORD: ref.types.uint32,
  ULONG: ref.types.uint32,
  HWND: ref.refType(ref.types.void),
  HKEY: ref.refType(ref.types.void),
  HANDLE: ref.refType(ref.types.void),
  HINSTANCE: ref.refType(ref.types.void),
  STRING: ref.types.CString,
  INT: ref.types.int32,
  LPVOID: ref.refType(ref.types.void)
};

var lpVerb = 'runas';
var hInstApp = ref.alloc(wtypes.HINSTANCE);
var SW_SHOWNORMAL = 0x1;

var DUMMYUNIONNAME = uniontype({
  hIcon: wtypes.HANDLE,
  hMonitor: wtypes.HANDLE
});

var SHELLEXECUTEINFO = struct({
  cbSize: wtypes.DWORD,
  fMask: wtypes.ULONG,
  hwnd: wtypes.HWND,
  lpVerb:  wtypes.STRING,
  lpFile:  wtypes.STRING,
  lpParameters: wtypes.STRING,
  lpDirectory: wtypes.STRING,
  nShow: wtypes.INT,
  hInstApp: wtypes.HINSTANCE,
  lpIDList: wtypes.LPVOID,
  lpClass: wtypes.STRING,
  hkeyClass: wtypes.HKEY,
  dwHotKey: wtypes.DWORD,
  DUMMYUNIONNAME: DUMMYUNIONNAME,
  hProcess: wtypes.HANDLE
});

var SHELLEXECUTEINFOPtr = ref.refType(SHELLEXECUTEINFO);
var shell32 = new ffi.Library('Shell32', {
  ShellExecuteExA: ['bool',  [SHELLEXECUTEINFOPtr]]
});

var elevate = function (filepath, parameters, callback) {
  if(!filepath) {
    callback('Missing filepath');
    return;
  }
  var shellexecuteinfoval = new SHELLEXECUTEINFO({
    cbSize: SHELLEXECUTEINFO.size,
    fMask: 0x00000000,
    hwnd: null,
    lpVerb: lpVerb,
    lpFile: filepath,
    lpParameters: parameters,
    lpDirectory: null,
    nShow: SW_SHOWNORMAL,
    hInstApp: hInstApp,
    lpIDList: null,
    lpCLass: null,
    hkeyClass: null,
    dwHotKey: null,
    DUMMYUNIONNAME: {
      hIcon: null,
      hMonitor: null
    },
    hProcess: ref.alloc(wtypes.HANDLE)
  });

  shell32.ShellExecuteExA.async(shellexecuteinfoval.ref(), callback);
};

module.exports = elevate;
